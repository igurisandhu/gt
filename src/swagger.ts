import swaggerJsdoc from "swagger-jsdoc";
import swaggerUi from "swagger-ui-express";
import { Express } from "express";

const options = {
  definition: {
    openapi: "3.0.0",
    info: {
      title: "GT TRACKER API",
      version: "1.0.0",
      description: "GT TRACKER API with autogenerated swagger doc",
    },
    servers: [
      {
        url: "http://localhost:3001", // Replace with your server URL
      },
    ],
    components: {
      parameters: {
        companyId: {
          in: "header",
          name: "company_id",
          schema: {
            type: "string",
          },
          required: false,
          description: "Optional company identifier",
        },
      },
      securitySchemes: {
        bearerAuth: {
          type: "apiKey",
          name: "Authorization",
          in: "header",
          description: "Enter your JWT token in the format: Bearer <token>",
        },
        apiKeyAuth: {
          type: "apiKey",
          name: "apikey",
          in: "header",
          description: "Enter your API key",
        },
      },
    },
    security: [
      {
        bearerAuth: [],
        apiKeyAuth: [],
      },
      {
        bearerAuth: [],
      },
      {
        apiKeyAuth: [],
      },
      {},
    ],
  },
  // Include all .ts files in the routes subfolders
  apis: ["src/routes/**/*.ts"],
};

let specs: any;

try {
  specs = swaggerJsdoc(options);
} catch (error) {
  console.error("Error generating Swagger Docs", error);
}

const swaggerSetup = (app: Express) => {
  if (!specs) {
    console.error("Swagger specs are not available. Skipping Swagger setup.");
    return;
  }
  app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(specs));
};

export default swaggerSetup;
